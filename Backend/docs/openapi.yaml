openapi: 3.0.0
info:
  title: Project Listings Docs
  version: 0.0.2
  description: API for managing projects, bids, and users

servers:
  - url: http:localhost:5000

paths:
  /signup:
    post:
      summary: User registration
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpInput'
      responses:
        '200':
          description: User added successfully
        '400':
          description: Bad request
        '500':
          description: Internal server error

  /login:
    post:
      summary: User login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        '200':
          description: Logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad request
        '500':
          description: Internal server error

  /users/verify:
    post:
      summary: Verify user token
      tags:
        - Authentication
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Token is valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /projects:
    post:
      summary: Add a new project
      tags:
        - Projects
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectInput'
      responses:
        '200':
          description: Project created successfully
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error

    get:
      summary: Get all projects
      tags:
        - Projects
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectSummary'
        '500':
          description: Internal server error

  /projects/{projectId}:
    get:
      summary: Get a specific project
      tags:
        - Projects
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: integer
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Project details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid project ID
        '404':
          description: Project not found
        '500':
          description: Internal server error

    put:
      summary: Update a project
      tags:
        - Projects
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: integer
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectInput'
      responses:
        '200':
          description: Project updated successfully
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error

    delete:
      summary: Delete a project
      tags:
        - Projects
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: integer
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Project deleted successfully
        '400':
          description: Invalid project ID
        '403':
          description: Forbidden
        '500':
          description: Internal server error

  /projects/{projectId}/files:
    delete:
      summary: Delete files associated with a project
      tags:
        - Projects
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: integer
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: string
      responses:
        '200':
          description: File deleted successfully
        '400':
          description: Invalid project ID or path
        '403':
          description: Forbidden
        '404':
          description: Project not found
        '500':
          description: Internal server error

  /projects/{projectId}/bids:
    post:
      summary: Add a new bid to a project
      tags:
        - Bids
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: integer
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BidInput'
      responses:
        '200':
          description: Bid added successfully
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error

  /projects/{projectId}/bids/{bidId}:
    put:
      summary: Update a bid
      tags:
        - Bids
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: integer
        - in: path
          name: bidId
          required: true
          schema:
            type: integer
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BidInput'
      responses:
        '200':
          description: Bid updated successfully
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error

    delete:
      summary: Delete a bid
      tags:
        - Bids
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: integer
        - in: path
          name: bidId
          required: true
          schema:
            type: integer
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Bid deleted successfully
        '400':
          description: Invalid bid ID
        '403':
          description: Forbidden
        '500':
          description: Internal server error

  /projects/{projectId}/bids/{bidId}/accept:
    post:
      summary: Accept a bid
      tags:
        - Bids
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: integer
        - in: path
          name: bidId
          required: true
          schema:
            type: integer
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Bid accepted successfully
        '400':
          description: Invalid bid ID or project ID
        '403':
          description: Forbidden
        '404':
          description: Bid not found
        '500':
          description: Internal server error

  /users/projects:
    get:
      summary: Get projects for the authenticated client
      tags:
        - Users
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of project IDs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
        '400':
          description: Invalid client ID
        '500':
          description: Internal server error

  /users/bids:
    get:
      summary: Get bids for the authenticated freelancer
      tags:
        - Users
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of bid IDs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
        '400':
          description: Invalid freelancer ID
        '500':
          description: Internal server error

components:
  schemas:
    SignUpInput:
      type: object
      required:
        - firstName
        - lastName
        - email
        - password
        - role
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        role:
          type: string
          enum: [freelancer, client]

    LoginInput:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    LoginResponse:
      type: object
      properties:
        token:
          type: string
        user:
          type: object
          properties:
            id:
              type: integer
            email:
              type: string
            firstName:
              type: string
            lastName:
              type: string
            role:
              type: string

    VerifyResponse:
      type: object
      properties:
        role:
          type: string
        id:
          type: integer

    ProjectInput:
      type: object
      required:
        - name
        - budget
        - deadline
        - description
        - userId
      properties:
        name:
          type: string
        budget:
          type: number
        deadline:
          type: string
          format: date-time
        description:
          type: string
        userId:
          type: integer
        projectFiles:
          type: array
          items:
            type: string
            format: binary

    ProjectSummary:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        budget:
          type: number
        deadline:
          type: string
          format: date-time
        description:
          type: string
        userId:
          type: integer
        files:
          type: array
          items:
            type: string
            
    Project:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        budget:
          type: number
        deadline:
          type: string
          format: date-time
        description:
          type: string
        userId:
          type: integer
        files:
          type: array
          items:
            type: string
        bids:
          type: array
          items:
            $ref: '#/components/schemas/Bid'

    BidInput:
      type: object
      required:
        - budget
        - deadline
        - description
        - userId
      properties:
        budget:
          type: number
        deadline:
          type: string
          format: date-time
        description:
          type: string
        userId:
          type: integer

    Bid:
      type: object
      properties:
        id:
          type: integer
        budget:
          type: number
        deadline:
          type: string
          format: date-time
        description:
          type: string
        userId:
          type: integer
        projectId:
          type: integer
        user:
          $ref: '#/components/schemas/User'

    User:
      type: object
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        role:
          type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT